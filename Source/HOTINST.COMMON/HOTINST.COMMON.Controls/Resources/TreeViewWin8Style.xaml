<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:internal="clr-namespace:HOTINST.COMMON.Controls.Converters.Internal"
                    xmlns:converters="clr-namespace:HOTINST.COMMON.Controls.Converters"
                    xmlns:editors="clr-namespace:HOTINST.COMMON.Controls.Controls.Editors"
                    xmlns:controls="clr-namespace:HOTINST.COMMON.Controls.Controls">
	<!-- 悬停状态的画刷 -->
	<SolidColorBrush x:Key="HoverBackgroundBrushKey" Color="#E5F3FB"/>
	<SolidColorBrush x:Key="HoverBorderBrushKey" Color="#70C0E7"/>

	<!-- 选中(激活)状态的画刷 -->
	<SolidColorBrush x:Key="SelectedActiveBackgroundBrushKey" Color="#CBE8F6"/>
	<SolidColorBrush x:Key="SelectedActiveBorderBrushKey" Color="#26A0DA"/>

	<!-- 选中(悬停)状态的画刷 -->
	<SolidColorBrush x:Key="SelectedHoverBackgroundBrushKey" Color="#D1E8FF"/>
	<SolidColorBrush x:Key="SelectedHoverBorderBrushKey" Color="#66A7E8"/>

	<!-- 选中(失效)状态的画刷 -->
	<SolidColorBrush x:Key="SelectedInactiveBackgroundBrushKey" Color="#8E9DDFE6"/>
	<SolidColorBrush x:Key="SelectedInactiveBorderBrushKey" Color="#9DDFE6"/>

	<!-- TreeViewItem 的展开箭头 -->
	<PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,5 L5,0 z"/>
	<Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Width" Value="7"/>
		<Setter Property="Height" Value="16"/>
		<Setter Property="ClickMode" Value="Press"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="Margin" Value="1,0,0,0"/>
		<Setter Property="IsHitTestVisible" Value="{Binding IsExpanderEnable,Mode=TwoWay}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Background="Transparent" Width="7" Height="16" Padding="0,5,0,0">
						<Path x:Name="ExpandPath" Fill="Transparent" Stroke="#989898"
						      Data="{StaticResource TreeArrow}">
							<Path.RenderTransform>
								<RotateTransform Angle="135" CenterX="2.5" CenterY="2.5"/>
							</Path.RenderTransform>
						</Path>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="ExpandPath" Property="Stroke" Value="#1BBBFA"/>
							<Setter TargetName="ExpandPath" Property="Fill" Value="Transparent"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="ExpandPath" Property="RenderTransform">
								<Setter.Value>
									<RotateTransform Angle="180" CenterX="3" CenterY="3"/>
								</Setter.Value>
							</Setter>
							<Setter TargetName="ExpandPath" Property="Stroke" Value="#262626"/>
							<Setter TargetName="ExpandPath" Property="Fill" Value="#595959"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True"/>
								<Condition Property="IsMouseOver" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="ExpandPath" Property="Stroke" Value="#1BBBFA"/>
							<Setter TargetName="ExpandPath" Property="Fill" Value="#82DFFB"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<HierarchicalDataTemplate x:Key="MenuItemTemplate" ItemsSource="{Binding Children}" DataType="editors:MenuItemViewModel">
		<StackPanel Orientation="Horizontal" RenderOptions.BitmapScalingMode="NearestNeighbor">
			<Image x:Name="Img" Width="16" Height="16" Margin="-45,0,0,0" Source="{Binding Icon}"/>
			<ContentPresenter RecognizesAccessKey="True" Content="{Binding Caption}"/>
		</StackPanel>
		<HierarchicalDataTemplate.Triggers>
			<DataTrigger Binding="{Binding IsChecked}" Value="True">
				<Setter TargetName="Img" Property="Visibility" Value="Hidden"/>
			</DataTrigger>
		</HierarchicalDataTemplate.Triggers>
	</HierarchicalDataTemplate>

	<!-- TreeViewItem 样式 -->
	<Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Padding" Value="0,1"/>
		<Setter Property="IsExpanded" Value="{Binding IsExpanded,Mode=TwoWay}"/>
		<Setter Property="IsSelected" Value="{Binding IsSelected,Mode=TwoWay}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<ControlTemplate.Resources>
						<!-- 计算节点缩进的转换器 -->
						<internal:IndentConverter Indent="12" MarginLeft="5" x:Key="IndentConverter"/>
						<converters:CollectionNullOrEmtpyConverter x:Key="EmtpyCvt"/>
					</ControlTemplate.Resources>
					<StackPanel>
						<Border x:Name="Border"
						        BorderBrush="{TemplateBinding BorderBrush}"
						        BorderThickness="{TemplateBinding BorderThickness}"
						        Background="{TemplateBinding Background}"
						        Padding="{TemplateBinding Padding}"
						        SnapsToDevicePixels="True">
							<Grid Margin="{Binding Converter={StaticResource IndentConverter}, RelativeSource={RelativeSource TemplatedParent}}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition MinWidth="12" Width="Auto"/>
									<ColumnDefinition/>
								</Grid.ColumnDefinitions>
								<ToggleButton x:Name="Expander" Width="Auto" Height="Auto"
								              Style="{StaticResource ExpandCollapseToggleStyle}"
								              IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"/>
								<ContentPresenter x:Name="PART_Header" Grid.Column="1" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Grid>
							<Border.ContextMenu>
								<ContextMenu ItemsSource="{Binding MenuItems}" ItemTemplate="{StaticResource MenuItemTemplate}">
									<ContextMenu.ItemContainerStyle>
										<Style TargetType="MenuItem">
											<Setter Property="StaysOpenOnClick" Value="{Binding StaysOpenOnClick}"/>
											<Setter Property="IsCheckable" Value="{Binding IsCheckable}"/>
											<Setter Property="IsChecked" Value="{Binding IsChecked}"/>
											<Setter Property="Command" Value="{Binding Command}"/>
											<Setter Property="CommandParameter" Value="{Binding CommandParameter}"/>
											<Setter Property="InputGestureText" Value="{Binding InputGestureText}"/>
											<Style.Triggers>
												<DataTrigger Binding="{Binding IsSeparator}" Value="True">
													<Setter Property="Height" Value="3"/>
													<Setter Property="Margin" Value="26,0,0,0"/>
													<Setter Property="IsEnabled" Value="False"/>
													<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"/>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</ContextMenu.ItemContainerStyle>
									<ContextMenu.Style>
										<Style TargetType="ContextMenu">
											<Style.Triggers>
												<DataTrigger Binding="{Binding MenuItems,Converter={StaticResource EmtpyCvt}}" Value="True">
													<Setter Property="Visibility" Value="Collapsed"/>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</ContextMenu.Style>
								</ContextMenu>
							</Border.ContextMenu>
						</Border>
						<ItemsPresenter x:Name="ItemsHost"/>
					</StackPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="False">
							<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="HasItems" Value="False">
							<Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="Border" Property="BorderBrush"
							        Value="{StaticResource SelectedActiveBorderBrushKey}"/>
							<Setter TargetName="Border" Property="Background"
							        Value="{StaticResource SelectedActiveBackgroundBrushKey}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True"/>
								<Condition Property="Selector.IsSelectionActive" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="Border" Property="BorderBrush"
							        Value="{StaticResource SelectedInactiveBorderBrushKey}"/>
							<Setter TargetName="Border" Property="Background"
							        Value="{StaticResource SelectedInactiveBackgroundBrushKey}"/>
						</MultiTrigger>
						<Trigger SourceName="Border" Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource HoverBorderBrushKey}"/>
							<Setter TargetName="Border" Property="Background" Value="{StaticResource HoverBackgroundBrushKey}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True"/>
								<Condition SourceName="Border" Property="IsMouseOver" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource SelectedHoverBorderBrushKey}"/>
							<Setter TargetName="Border" Property="Background" Value="{StaticResource SelectedHoverBackgroundBrushKey}"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<BooleanToVisibilityConverter x:Key="BoolToVisibilityCvt"/>
	
	<Style x:Key="{x:Type TreeView}" TargetType="{x:Type TreeView}">
		<Setter Property="ItemTemplate">
			<Setter.Value>
				<HierarchicalDataTemplate ItemsSource="{Binding Children}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>

						<Image Grid.Column="0" MaxWidth="16" MaxHeight="16" Margin="0,0,2,0" Source="{Binding Icon}" VerticalAlignment="Center"/>
						<StackPanel Grid.Column="1" Orientation="Horizontal" Height="20">
							<editors:EditableTextBlock Grid.Column="1" VerticalAlignment="Center"
							                           Text="{Binding Caption,Mode=TwoWay}"
							                           TextFormat="{Binding CaptionFormat}"
							                           TextEx="{Binding CaptionEx}"
							                           IsEditable="{Binding AllowEdit}"
							                           IsInEditMode="{Binding IsInEditMode,Mode=TwoWay}"/>
							<controls:SpinnerCogs Width="20" Height="20" Margin="5,0,0,0" Focusable="False" VerticalAlignment="Center" ClipToBounds="True"
												  Visibility="{Binding ShowSpinner,Mode=TwoWay,Converter={StaticResource BoolToVisibilityCvt}}"/>
						</StackPanel>
					</Grid>
				</HierarchicalDataTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>